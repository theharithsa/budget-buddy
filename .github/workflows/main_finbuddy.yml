# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions
name: Build and deploy Node.js app to Azure Web App - finbuddy
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      actions: read
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.24.2
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ vars.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}"]'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need git history for tracking
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '22.x'
      - name: npm install, build, and test
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: .
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    # Always run deploy job even if build fails, to send status to Dynatrace
    if: always()
    steps:
      - uses: plengauer/opentelemetry-github/actions/instrument/job@v5.24.2
        env:
          OTEL_EXPORTER_OTLP_ENDPOINT: ${{ vars.OTEL_EXPORTER_OTLP_ENDPOINT }}
          OTEL_EXPORTER_OTLP_HEADERS: ${{ secrets.OTEL_EXPORTER_OTLP_HEADERS }}
        with:
          secrets_to_redact: '["${{ github.token }}","${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DB75F49D4E06445D8D5A7EF60CAC9EF5 }}","${{ secrets.DYNATRACE_TOKEN }}"]'
      - name: Checkout code for git info
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
        # Only download artifact if build was successful
        if: needs.build.result == 'success'
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'finbuddy'
          slot-name: 'Production'
          package: .
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_DB75F49D4E06445D8D5A7EF60CAC9EF5 }}
        # Only deploy if build was successful
        if: needs.build.result == 'success'
      - name: Send pipeline event to Dynatrace
        if: always() # Run even if deployment fails
        env:
          DYNATRACE_TOKEN: ${{ secrets.DYNATRACE_TOKEN }}
          DYNATRACE_ENDPOINT: ${{ vars.DYNATRACE_ENDPOINT }}
        run: "# Create a simple pipeline event\nEVENT_ID=$(date +%s%3N)\nTIMESTAMP=$(date -u +\"%Y-%m-%dT%H:%M:%S.%3NZ\")\n\n# Get git info safely\nGIT_COMMIT=$(git rev-parse HEAD 2>/dev/null | cut -c1-8 || echo \"unknown\")\nGIT_BRANCH=$(git rev-parse --abbrev-ref HEAD 2>/dev/null || echo \"main\")\nGIT_AUTHOR=$(git log -1 --pretty=format:'%an' 2>/dev/null || echo \"GitHub Actions\")\nGIT_MESSAGE=$(git log -1 --pretty=format:'%s' 2>/dev/null || echo \"Automated deployment\")\n\n# Determine build status from needs context\nBUILD_STATUS=\"${{ needs.build.result }}\"\nif [ \"$BUILD_STATUS\" = \"success\" ]; then\n  BUILD_STATUS=\"success\"\nelse\n  BUILD_STATUS=\"failed\"\nfi\n\n# Determine deployment status\nif [ \"${{ needs.build.result }}\" = \"success\" ]; then\n  if [ \"${{ steps.deploy-to-webapp.outcome }}\" = \"success\" ]; then\n    DEPLOYMENT_STATUS=\"success\"\n  elif [ \"${{ steps.deploy-to-webapp.outcome }}\" = \"\" ]; then\n    DEPLOYMENT_STATUS=\"skipped\"\n  else\n    DEPLOYMENT_STATUS=\"failed\"\n  fi\nelse\n  DEPLOYMENT_STATUS=\"skipped\"\nfi\n\n# Determine overall pipeline status\nif [ \"$BUILD_STATUS\" = \"success\" ] && [ \"$DEPLOYMENT_STATUS\" = \"success\" ]; then\n  PIPELINE_STATUS=\"success\"\nelse\n  PIPELINE_STATUS=\"failed\"\nfi\n\n# Create event payload\ncat > event.json << EOF\n{\n  \"source\": \"finbuddy\",\n  \"event.id\": $EVENT_ID,\n  \"event.type\": \"pipeline\",\n  \"pipeline.timestamp\": \"$TIMESTAMP\",\n  \"pipeline.status\": \"$PIPELINE_STATUS\",\n  \"project.name\": \"finbuddy\",\n  \"project.version\": \"1.5.3\",\n  \"environment\": \"production\",\n  \"git.commit\": \"$GIT_COMMIT\",\n  \"git.branch\": \"$GIT_BRANCH\",\n  \"git.author\": \"$GIT_AUTHOR\",\n  \"git.message\": \"$GIT_MESSAGE\",\n  \"build.status\": \"$BUILD_STATUS\",\n  \"deployment.status\": \"$DEPLOYMENT_STATUS\",\n  \"deployment.url\": \"https://finbuddy.azurewebsites.net\",\n  \"azure.webapp_name\": \"finbuddy\",\n  \"platform\": \"linux\",\n  \"ci.pipeline\": \"github-actions\"\n}\nEOF\n\n# Validate environment variables\nif [ -z \"$DYNATRACE_TOKEN\" ] || [ -z \"$DYNATRACE_ENDPOINT\" ]; then\n  echo \"❌ Missing Dynatrace configuration\"\n  echo \"DYNATRACE_TOKEN: ${DYNATRACE_TOKEN:+set}\"\n  echo \"DYNATRACE_ENDPOINT: ${DYNATRACE_ENDPOINT:+set}\"\n  exit 1\nfi\n\n# Send to Dynatrace with error handling\necho \"\U0001F4E1 Sending event to Dynatrace...\"\necho \"Endpoint: $DYNATRACE_ENDPOINT\"\necho \"Pipeline Status: $PIPELINE_STATUS\"\necho \"Build Status: $BUILD_STATUS\"\necho \"Deployment Status: $DEPLOYMENT_STATUS\"\n\nif curl -X POST \"$DYNATRACE_ENDPOINT\" \\\n  -H \"Authorization: Api-Token $DYNATRACE_TOKEN\" \\\n  -H \"Content-Type: application/json\" \\\n  -d @event.json \\\n  --fail \\\n  --silent \\\n  --show-error; then\n  echo \"✅ Pipeline event sent to Dynatrace successfully!\"\nelse\n  echo \"❌ Failed to send event to Dynatrace\"\n  echo \"Event payload:\"\n  cat event.json\n  exit 1\nfi"
    permissions:
      actions: read
